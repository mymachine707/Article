definitions:
  main.Article:
    properties:
      author:
        $ref: '#/definitions/main.Person'
      body:
        type: string
      created_at:
        type: string
      id:
        type: string
      title:
        type: string
      updated_at:
        type: string
    required:
    - author
    - body
    - title
    type: object
  main.JSONErrorResponse:
    properties:
      error:
        type: string
    type: object
  main.JSONResult:
    properties:
      data: {}
      message:
        type: string
    type: object
  main.Person:
    properties:
      firstname:
        type: string
      lastname:
        type: string
    required:
    - firstname
    - lastname
    type: object
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
paths:
  /v2/article:
    post:
      consumes:
      - application/json
      description: Creat a new article
      parameters:
      - description: Article body
        in: body
        name: article
        required: true
        schema:
          $ref: '#/definitions/main.Article'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/main.Article'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.JSONErrorResponse'
      summary: Creat Article
      tags:
      - article
  /v2/article/:
    get:
      consumes:
      - application/json
      description: GetArticleList
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/main.JSONResult'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/main.Article'
                  type: array
              type: object
      summary: List articles
      tags:
      - article
    put:
      consumes:
      - application/json
      description: Update Article
      parameters:
      - description: Article body
        in: body
        name: article
        required: true
        schema:
          $ref: '#/definitions/main.Article'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/main.JSONResult'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/main.Article'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.JSONErrorResponse'
      summary: My work !!! -- Update Article
      tags:
      - article
  /v2/article/{id}:
    delete:
      consumes:
      - application/json
      description: get element by id and delete this article
      parameters:
      - description: Article id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/main.JSONResult'
            - properties:
                data:
                  $ref: '#/definitions/main.Article'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.JSONErrorResponse'
      summary: my work!!! -- Delete Article
      tags:
      - article
    get:
      consumes:
      - application/json
      description: get an article by id
      parameters:
      - description: Article id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/main.JSONResult'
            - properties:
                data:
                  $ref: '#/definitions/main.Article'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.JSONErrorResponse'
      summary: GetArticleByID
      tags:
      - article
swagger: "2.0"
