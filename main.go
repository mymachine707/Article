package main

import (
	"net/http"
	"time"

	"github.com/gin-gonic/gin"
	swaggerFiles "github.com/swaggo/files"
	ginSwagger "github.com/swaggo/gin-swagger"

	docs "mymachine707/docs" // docs is generated by Swag CLI, you have to import it.
	"mymachine707/handlars"
	"mymachine707/models"
	"mymachine707/storage"
)

// @contact.name  API Support
// @contact.url   http://www.swagger.io/support
// @contact.email support@swagger.io

// @license.name Apache 2.0
// @license.url  http://www.apache.org/licenses/LICENSE-2.0.html

func main() {
	docs.SwaggerInfo.Title = "Swagger Example API"
	docs.SwaggerInfo.Description = "This is a sample server Petstore server."
	docs.SwaggerInfo.Version = "2.0"

	storage.InMemoryArticleData = append(storage.InMemoryArticleData, models.Article{
		ID: "1b166874-d9cb-4e34-a13b-fdb5716c92c4",
		Content: models.Content{
			Title: "Lorem",
			Body:  "new life in coding",
		},
		Author: models.Person{
			Firstname: "Islombek",
			Lastname:  "Oripov",
		},
		CreatedAt: time.Now(),
	})

	r := gin.Default()

	r.GET("/ping", func(c *gin.Context) {
		c.JSON(http.StatusOK, gin.H{
			"message": "pong",
		})
	})

	// Gruppirovka qilindi
	v1 := r.Group("v2")
	{
		v1.POST("/article", handlars.CreatArticle)
		v1.GET("/article/:id", handlars.GetArticleByID)
		v1.GET("/article", handlars.GetArticleList)
		v1.PUT("/article", handlars.ArticleUpdate)
		v1.DELETE("/article/:id", handlars.DeleteArticle)
	}

	r.GET("/swagger/*any", ginSwagger.WrapHandler(swaggerFiles.Handler))

	r.Run(":3000") // listen and serve on 0.0.0.0:8080 (for windows "localhost:8080")
}
